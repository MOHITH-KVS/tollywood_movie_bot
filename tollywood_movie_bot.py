# -*- coding: utf-8 -*-
"""TOLLYWOOD_MOVIE_BOT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XonTF3MR67qXOM3vjQpnW0MLlVoOAXH1

TOLLYWOOD MOVIE BOT
"""

!pip install spacy
!python -m spacy download en_core_web_sm

import spacy
nlp = spacy.load("en_core_web_sm")
import spacy
print(spacy.__version__)  # Check spaCy version

# Attempt to load the model
try:
    nlp = spacy.load("en_core_web_sm")
    print("spaCy model loaded successfully!")
except Exception as e:
    print(f"Error loading spaCy model: {e}")

import json
import os
import random
import re
import spacy

# Load the spaCy NLP model
nlp = spacy.load("en_core_web_sm")

# Load the JSON data with file check
def load_json(file_path):
    if not os.path.exists(file_path):
        print(f"Error: File '{file_path}' not found.")
        return {}

    with open(file_path, 'r') as file:
        content = file.read().strip()
        if not content:
            print(f"Error: File '{file_path}' is empty.")
            return {}
        try:
            data = json.loads(content)  # Load JSON from the string content
        except json.JSONDecodeError as e:
            print(f"JSONDecodeError: {e}")
            return {}
    return data

# Load data
tollywood_movies = load_json('/content/tollywood_movies.json')
if not tollywood_movies:
    print("Failed to load data. Please check the JSON file format or content.")
else:
    print("Data loaded successfully!")

    # Initialize lookup dictionaries
    actor_to_movies = {}
    movie_to_actor = {}

    # Populate dictionaries with original and lowercase versions
    for actor, movies in tollywood_movies.items():
        actor_lower = actor.strip().lower()
        actor_to_movies[actor_lower] = {'original_name': actor, 'movies': movies}

        for movie in movies:
            movie_lower = movie.strip().lower()
            if movie_lower not in movie_to_actor:
                movie_to_actor[movie_lower] = []
            movie_to_actor[movie_lower].append(actor)

    # Define 100 trivia questions for the game
    trivia_questions = [
        {"question": "Who is known as the 'Mega Star' of Tollywood?", "answer": "chiranjeevi"},
        {"question": "Which movie was Prabhas's big break?", "answer": "varsham"},
        {"question": "Who directed the movie *Baahubali*?", "answer": "S. S. Rajamouli"},
        {"question": "What was the first Telugu movie to collect over ₹200 crore at the box office?", "answer": "*Baahubali: The Beginning*"},
        {"question": "Which Tollywood movie was India's official entry to the Oscars in 2021?", "answer": "*Jallikattu*"},
        {"question": "Who is known as the 'Rebel Star' of Tollywood?", "answer": "Prabhas"},
        {"question": "Which actress made her Tollywood debut with the movie *Devadasu*?", "answer": "Ileana D'Cruz"},
        {"question": "What is the real name of actor Allu Arjun?", "answer": "Allu Arjun"},
        {"question": "Which Tollywood film was the first to introduce 3D technology?", "answer": "*Aalavandhan*"},
        {"question": "Who played the lead role in the movie *Arjun Reddy*?", "answer": "Vijay Deverakonda"},
        {"question": "Which Tollywood actor is referred to as 'Super Star'?", "answer": "Mahesh Babu"},
        {"question": "Which Tollywood actor is known as the 'Power Star'?", "answer": "Pawan Kalyan"},
        {"question": "Who is the director of the movie *Eega*?", "answer": "S. S. Rajamouli"},
        {"question": "In which movie did actor Jr. NTR play dual roles for the first time?", "answer": "*Adhurs*"},
        {"question": "Which actress is known for her role in the movie *Magadheera*?", "answer": "Kajal Aggarwal"},
        {"question": "Which Tollywood actor is called the 'Prince of Tollywood'?", "answer": "Mahesh Babu"},
        {"question": "Which movie features the iconic song 'Pillaa Raa'?", "answer": "*RX 100*"},
        {"question": "Who directed the critically acclaimed movie *Pelli Choopulu*?", "answer": "Tharun Bhascker"},
        {"question": "Which actor is famous for the dialogue 'Cheppanu Brother'?", "answer": "Allu Arjun"},
        {"question": "Which Tollywood film was first shot in the Maldives?", "answer": "*Rangasthalam*"},
        {"question": "Who is the leading actress in the movie *Bahubali*?", "answer": "Anushka Shetty"},
        {"question": "Who played the character 'Arya' in the movie *Arya*?", "answer": "Allu Arjun"},
        {"question": "In which year was the movie *Magadheera* released?", "answer": "2009"},
        {"question": "Who directed the movie *Fidaa*?", "answer": "Sekhar Kammula"},
        {"question": "Which Tollywood movie's story is based on a cricket match?", "answer": "*Jersey*"},
        {"question": "Who won the Best Actor award for the movie *Geetha Govindam*?", "answer": "Vijay Deverakonda"},
        {"question": "Who is known as the 'Stylish Star' in Tollywood?", "answer": "Allu Arjun"},
        {"question": "What is the famous punch dialogue of Mahesh Babu in *Pokiri*?", "answer": "'Evadu Kodithey Dimma Tirigi Mind Block Ayipothundo Aade Pandu Gadu'"},
        {"question": "Which actor played the lead role in the movie *Chatrapathi*?", "answer": "Prabhas"},
        {"question": "Who directed *Sye*, a sports-based Tollywood movie?", "answer": "S. S. Rajamouli"},
        {"question": "What is the nickname of Nandamuri Taraka Rama Rao Jr.?", "answer": "Jr. NTR"},
        {"question": "Who played the lead role in *Bhagmati*?", "answer": "Anushka Shetty"},
        {"question": "Which Tollywood movie marked the debut of Rashmika Mandanna?", "answer": "*Chalo*"},
        {"question": "Who is the lead actor in *Majili*?", "answer": "Naga Chaitanya"},
        {"question": "Which Tollywood actor is known for the dialogue 'Dialogue King'?", "answer": "Sai Kumar"},
        {"question": "Who directed the movie *Mahanati*?", "answer": "Nag Ashwin"},
        {"question": "Which movie's success turned Ram Charan into a star?", "answer": "*Magadheera*"},
        {"question": "What is the debut movie of Pawan Kalyan?", "answer": "*Akkada Ammayi Ikkada Abbayi*"},
        {"question": "Which movie won the Nandi Award for Best Film in 2015?", "answer": "*Baahubali: The Beginning*"},
        {"question": "Who played the lead female role in *Jersey*?", "answer": "Shraddha Srinath"},
        {"question": "Which Tollywood actor is known as 'Megastar'?", "answer": "Chiranjeevi"},
        {"question": "What is the popular dialogue from the movie *Simhadri*?", "answer": "'Aaduvari Matalaku Ardhale Verule'"},
        {"question": "Who is the director of *Temper*?", "answer": "Puri Jagannadh"},
        {"question": "Who starred in the movie *Shyam Singha Roy*?", "answer": "Nani"},
        {"question": "Who is the music director for *Ala Vaikunthapurramuloo*?", "answer": "S. Thaman"},
        {"question": "Which Tollywood movie has the song 'Butta Bomma'?", "answer": "*Ala Vaikunthapurramuloo*"},
        {"question": "Who directed the movie *Gabbar Singh*?", "answer": "Harish Shankar"},
        {"question": "Which Tollywood movie featured the song 'Top Lechipoddi'?", "answer": "*Iddarammayilatho*"},
        {"question": "Who played the character 'Bhagat Singh' in *Thammudu*?", "answer": "Pawan Kalyan"},
        {"question": "What was Mahesh Babu's debut movie as a lead actor?", "answer": "*Rajakumarudu*"},
        {"question": "Who played the female lead in *Sarileru Neekevvaru*?", "answer": "Rashmika Mandanna"},
        {"question": "Who starred in the movie *Bheeshma*?", "answer": "Nithiin"}
   ]

    # Function to tell about the bot
    def tell_about_bot():
        bot_name = "5STAR"
        num_actors = len(tollywood_movies)
        num_movies = sum(len(movies) for movies in tollywood_movies.values())
        favorite_movie = "I LIKE ALL THE MOVIES"  # You can choose any movie here

        about_message = f"""
        Hello! I am {bot_name}.
        I currently know about {num_actors} actors and {num_movies} movies in Tollywood.
        My favorite movie is {favorite_movie}.
        I can help you with my knowledge, show movies of specific actors, and find which actor starred in a particular movie.
        """
        print(about_message)

    # Helper function to find the actor with the most movies
    def get_actor_with_most_movies():
        max_movies_actor = max(actor_to_movies, key=lambda actor: len(actor_to_movies[actor]['movies']))
        max_movies_count = len(actor_to_movies[max_movies_actor]['movies'])
        return actor_to_movies[max_movies_actor]['original_name'], max_movies_count

    # Function to start the trivia game
    def start_trivia_game():
        score = 0
        random.shuffle(trivia_questions)  # Shuffle questions for variety
        print("\nStarting the trivia game!")
        for idx, question in enumerate(trivia_questions[:5], 1):  # Ask 5 questions per game
            print(f"Question {idx}: {question['question']}")
            user_answer = input("Your answer: ").strip().lower()

            # Check the answer and give feedback
            if user_answer == question['answer']:
                print("Correct!")
                score += 1
            else:
                print(f"Wrong! The correct answer was: {question['answer'].title()}")

        print(f"\nGame over! Your score: {score}/{5}\n")
        if score == 5:
            return "You’re on fire! 🔥 You’ve answered all the trivia questions like a pro!"
        return f"Your final score: {score} out of 5."

    # Chatbot response function with refined fun commands
    def chatbot_response(user_input):
        user_input_normalized = user_input.strip().lower()

        # Help command
        if user_input_normalized in ["help", "what can you do?"]:
            return ("Here are some things you can ask 5star:\n"
                    "- 'Show all movies of [Actor Name]'\n"
                    "- 'List the actor with the most movies'\n"
                    "- 'Compare [Actor 1] and [Actor 2]'\n"
                    "- 'Suggest a random movie'\n"
                    "- 'Show all actors in [Movie Name]'\n"
                    "- 'Tell me a fun fact about an actor'\n"
                    "- 'Create a movie mashup'\n"
                    "- 'Tell me about you'\n"
                    "- 'Play a trivia game'")

        if user_input_normalized in ["thank you", "thanks"]:
           return "You're very welcome! 😊 If you have more questions, I'm here to help!"

        if user_input_normalized in ["ok", "okay", "great", "awesome"]:
            return "Glad you're enjoying it! Let me know if there's anything else I can do. 👍"

        if user_input_normalized in ["bye", "goodbye"]:
            return "Goodbye! Have a great day 😊"

        # Check for negative or dissatisfied feedback
        negative_keywords = ["worst", "not satisfied", "bad", "disappointing", "horrible", "terrible"]
        if any(neg_word in user_input_normalized for neg_word in negative_keywords):
          return "Oh no, I'm really sorry to hear that you're not happy. Please let me know how I can improve or assist you better!"


        # Inside chatbot_response function
        if user_input_normalized == "tell me about you":
            return tell_about_bot()


        # Trivia game command
        if user_input_normalized == "play a trivia game":
            return start_trivia_game()

        # Recommend a random movie
        if user_input_normalized == "suggest a random movie":
            all_movies = list(movie_to_actor.keys())
            random_movie = random.choice(all_movies).title()
            return f"How about watching '{random_movie}'?"

        # Show the actor with the most movies
        if user_input_normalized == "list the actor with the most movies":
            actor_name, movie_count = get_actor_with_most_movies()
            return f"{actor_name} has acted in the most movies, with a total of {movie_count}!"

        # Fun fact about a random actor
        if user_input_normalized == "tell me a fun fact about an actor":
            random_actor = random.choice(list(actor_to_movies.keys()))
            actor_details = actor_to_movies[random_actor]
            movies = actor_details['movies']
            if len(movies) >= 2:
                first_movie = movies[0]
                last_movie = movies[-1]
                return (f"Fun fact about {actor_details['original_name']}:\n"
                        f"Their earliest movie is '{first_movie}' and their latest one is '{last_movie}'.")
            elif len(movies) == 1:
                return (f"Fun fact about {actor_details['original_name']}:\n"
                        f"They have starred in at least one notable movie: '{movies[0]}'.")
            else:
                return f"Fun fact about {actor_details['original_name']}: They have an upcoming project in the works!"

        # Create a movie mashup
        if user_input_normalized == "create a movie mashup":
            movies = random.sample(list(movie_to_actor.keys()), 2)
            mashup_title = f"{movies[0].title()} vs. {movies[1].title()}"
            return f"Imagine this movie mashup: '{mashup_title}'!"

        # Show all actors in a movie
        movie_match = re.search(r"show all actors in (.+)", user_input_normalized)
        if movie_match:
            movie_name = movie_match.group(1).strip().lower()
            if movie_name in movie_to_actor:
                actors = movie_to_actor[movie_name]
                return f"The movie '{movie_name.title()}' features: " + ", ".join(actors)
            else:
                return "Sorry, I couldn't find that movie. Please check the title."

        # Show all movies of an actor
        actor_match = re.search(r"show all movies of (.+)", user_input_normalized)
        if actor_match:
            actor_name = actor_match.group(1).strip().lower()
            if actor_name in actor_to_movies:
                movies = actor_to_movies[actor_name]['movies']
                movie_list = "\n".join(f"- {movie.title()}" for movie in movies)
                return f"{actor_to_movies[actor_name]['original_name']} has acted in the following movies:\n{movie_list}"
            else:
                return "Sorry, I couldn't find that actor. Please check the name."

        # Compare two actors
        compare_match = re.search(r"compare ([\w\s]+) and ([\w\s]+)", user_input_normalized)
        if compare_match:
            actor1, actor2 = compare_match.groups()
            actor1_lower = actor1.strip().lower()
            actor2_lower = actor2.strip().lower()

            if actor1_lower in actor_to_movies and actor2_lower in actor_to_movies:
                count1 = len(actor_to_movies[actor1_lower]['movies'])
                count2 = len(actor_to_movies[actor2_lower]['movies'])
                if count1 > count2:
                    return f"{actor_to_movies[actor1_lower]['original_name']} has acted in more movies ({count1}) than {actor_to_movies[actor2_lower]['original_name']} ({count2})."
                elif count2 > count1:
                    return f"{actor_to_movies[actor2_lower]['original_name']} has acted in more movies ({count2}) than {actor_to_movies[actor1_lower]['original_name']} ({count1})."
                else:
                    return f"{actor_to_movies[actor1_lower]['original_name']} and {actor_to_movies[actor2_lower]['original_name']} have acted in the same number of movies ({count1})."
            else:
                return "One or both of the actors couldn't be found. Please check their names."

        # Check if user_input matches an actor's name directly
        if user_input_normalized in actor_to_movies:
            actor_details = actor_to_movies[user_input_normalized]
            movies = actor_details['movies']
            original_name = actor_details['original_name']
            movie_list = "\n".join(f"- {movie}" for movie in movies)
            movie_count = len(movies)
            return (f"{original_name} has acted in the following movies:\n{movie_list}\n"
                    f"Total number of movies: {movie_count}")

        return "Sorry, I couldn't find that actor or movie. Please check the name and try again, or try the help options"

    # Main interaction loop
    print("Welcome to 5star, the Tollywood Movie Chatbot! Type 'help' for options or 'exit' to quit.")
    while True:
        user_input = input("Enter a command: ")
        if user_input.lower() == "exit":
            print("Goodbye from 5star!")
            break
        response = chatbot_response(user_input)
        print(response)